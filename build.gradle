plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'dev.harrel'
version '1.0.0-beta.2'
sourceCompatibility JavaVersion.VERSION_17
targetCompatibility JavaVersion.VERSION_17

java {
    withSourcesJar()
    withJavadocJar()
    registerFeature('jackson') {
        usingSourceSet(sourceSets.main)
    }
    registerFeature('gson') {
        usingSourceSet(sourceSets.main)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    jacksonImplementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    gsonImplementation 'com.google.code.gson:gson:2.10.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = 'reposilite'
            url = findProperty('reposiliteSnapshots')
            credentials {
                username = findProperty('reposiliteUsername')
                password = findProperty('reposilitePassword')
            }
        }
        maven {
            name = 'sonatype'
            url = findProperty('sonatype.repo')
            credentials {
                username = findProperty('sonatype.username')
                password = findProperty('sonatype.password')
            }
        }
    }
    publications {
        local(MavenPublication) {
            from components.java
        }
        sonatype(MavenPublication) {
            from components.java
            pom {
                name = 'json-schema'
                description = 'Library for JSON schema validation'
                url = 'https://github.com/harrel56/json-schema'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/harrel56/json-schema/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'harrel56'
                        name = 'Harrel'
                        url = 'https://harrel.dev'
                    }
                }
                scm {
                    url = 'https://github.com/harrel56/json-schema'
                    connection = 'scm:git:git://github.com/harrel56/json-schema.git'
                    developerConnection = 'scm:git:git://github.com/harrel56/json-schema.git'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/harrel56/json-schema/issues'
                }
            }
        }
    }
}

signing {
    if (findProperty('signing.keyId') == null) {
        useInMemoryPgpKeys(findProperty('signing.key'), findProperty('signing.password'))
    }
    sign publishing.publications.sonatype
}