tasks.register('genericTests', Test) {
    description = 'Runs all tests that are not related to specific JSON providers (no specification tests)'
    useJUnitPlatform()
    group = 'verification'

    filter {
        excludeTestsMatching 'dev.harrel.jsonschema.providers.*'
    }
}
tasks.check.dependsOn genericTests

ext.setupProviderTest = (String provider, String dependency) -> {
    def taskName = "${provider}Test"
    def configName = "${taskName}Implementation"
    sourceSets.create(taskName) {
        java {
            srcDir file("src/provider-test/$provider")
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
    }
    tasks.getByName("compile${taskName.capitalize()}Java") {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    configurations.getByName(configName).extendsFrom configurations.getByName('testImplementation')
    dependencies.add(configName, dependency)
    tasks.register(taskName, Test) {
        useJUnitPlatform()
        group = 'verification'
        testClassesDirs = sourceSets.getByName(taskName).output.classesDirs
        classpath = sourceSets.getByName(taskName).runtimeClasspath
        javaLauncher = javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }
    tasks.check.dependsOn taskName
}